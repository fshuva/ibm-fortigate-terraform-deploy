name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt install terraform=0.13.7
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

    # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -var ssh_public_key='fortigate-terraform-sshkey-fshuva' -var vpc='fshuva-qa-test-vpc' -var subnet1='0717-2e15ec1e-6d5d-48cb-a6c2-787f3586910c' -var subnet2='0717-7f63990a-6c23-4278-a048-b79479227425' -var security_group='evade-subzero-cola-goes' -var cluster_name='fortigate-tf-actions-cli' -var ibmcloud_api_key='${{secrets.IBMCLOUD_API_KEY}}'

    #   On push to main, build or change infrastructure according to Terraform configuration files
    #   Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
    #    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var ssh_public_key='fortigate-terraform-sshkey-fshuva' -var vpc='fshuva-qa-test-vpc' -var subnet1='0717-2e15ec1e-6d5d-48cb-a6c2-787f3586910c' -var subnet2='0717-7f63990a-6c23-4278-a048-b79479227425' -var security_group='evade-subzero-cola-goes' -var cluster_name='fortigate-tf-actions-cli' -var ibmcloud_api_key='${{secrets.IBMCLOUD_API_KEY}}'

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var ssh_public_key='fortigate-terraform-sshkey-fshuva' -var vpc='fshuva-qa-test-vpc' -var subnet1='0717-2e15ec1e-6d5d-48cb-a6c2-787f3586910c' -var subnet2='0717-7f63990a-6c23-4278-a048-b79479227425' -var security_group='evade-subzero-cola-goes' -var cluster_name='fortigate-tf-actions-cli' -var ibmcloud_api_key='${{secrets.IBMCLOUD_API_KEY}}'